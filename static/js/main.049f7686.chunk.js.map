{"version":3,"sources":["useApi.tsx","emoji.ts","PeopleSwiper.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["overrideHost","URLSearchParams","window","location","search","get","host","shuffleArray","array","i","length","j","Math","floor","random","positiveIcon","includes","negativeIcon","PersonItem","props","Box","position","width","maxWidth","height","boxShadow","borderRadius","style","backgroundColor","backgroundSize","backgroundPosition","display","flexDirection","justifyContent","marginTop","marginLeft","marginRight","background","imgsrc","bottom","left","paddingX","paddingY","color","fontWeight","fontSize","alignItems","n","y","flex","p","textAlign","name","party","PeopleSwiper","people","onSelect","React","useState","counter","setCounter","childRefs","useMemo","Array","fill","map","createRef","paddingTop","slice","reverse","person","index","key","id","WebkitUserSelect","transform","ref","flickOnSwipe","preventSwipe","onCardLeftScreen","direction","x","alignSelf","Fab","onClick","current","swipe","href","encodeURIComponent","src","Table","score","LinearProgress","variant","value","Boolean","hostname","match","ReactDOM","render","isLoading","setLoading","isError","setError","undefined","setPeople","useEffect","a","fetch","response","json","load","usePeople","peopleLoaded","voteYes","voteNo","voted","setVoted","pastVotes","JSON","parse","localStorage","votedIds","filter","minHeight","borderTop","backgroundRepeat","opacity","yes","then","updated","list","stringify","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.049f7686.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Person = {\n  id: string;\n  name: string;\n  imgsrc?: string;\n  party?: string;\n  y: number;\n  n: number;\n};\n\nconst overrideHost = new URLSearchParams(window.location.search).get('host');\n\nconst host = overrideHost !== null ? overrideHost : \"http://34.67.21.85:8000\";\n\nfunction shuffleArray<T>(array: T[]): T[] {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nexport const usePeople = () => {\n  const [isLoading, setLoading] = React.useState<boolean>(false);\n  const [isError, setError] = React.useState<boolean>(false);\n  const [people, setPeople] = React.useState<Person[] | undefined>(undefined);\n\n  React.useEffect(() => {\n    const load = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(host + \"/api/v1/lj/\");\n        setPeople(shuffleArray((await response.json()) as Person[]));\n        setLoading(false);\n      } catch (e) {\n        setError(true);\n      }\n    };\n    load();\n  }, []);\n\n  return React.useMemo(\n    () => ({\n      people,\n      isLoading,\n      isError,\n    }),\n    [people, isLoading, isError]\n  );\n};\n\nexport const useVote = () => {\n    return {\n      voteYes: async (id: string): Promise<Person> => await (await fetch(host + \"/api/v1/lj/vote_y/\" + id)).json(),\n      voteNo: async (id: string): Promise<Person> => await (await fetch(host + \"/api/v1/lj/vote_n/\" + id)).json(),\n    }\n};","export const positiveIcon = window.location.host.includes('poop') ? '💩' : '🐸';\nexport const negativeIcon = window.location.host.includes('poop') ? '❤️' : '👨🏼‍🦲';","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport TinderCard from \"react-tinder-card\";\nimport { Person } from \"./useApi\";\nimport Fab from '@material-ui/core/Fab';\nimport { negativeIcon, positiveIcon } from './emoji';\n\nconst PersonItem = (props: Person) => (\n  <Box\n    position=\"relative\"\n    width=\"90vw\"\n    maxWidth=\"460px\"\n    height=\"500px\"\n    boxShadow=\"0px 0px 60px 0px rgba(0,0,0,0.30)\"\n    borderRadius={20}\n    style={{\n      backgroundColor: \"white\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n    }}\n    display=\"flex\"\n    flexDirection=\"column\"\n    justifyContent=\"stretch\"\n  >\n    <Box\n      position=\"relative\"\n      borderRadius={20}\n      marginTop=\"16px\"\n      marginLeft=\"16px\"\n      marginRight=\"16px\"\n      height={400}\n      style={{\n        background: `url(${props.imgsrc})`,\n        backgroundColor: \"white\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n      display=\"flex\"\n      flexDirection=\"column-reverse\"\n    >\n      <Box\n        position=\"absolute\"\n        bottom=\"20px\"\n        left=\"20px\"\n        borderRadius={20}\n        paddingX=\"20px\"\n        paddingY=\"10px\"\n        style={{\n          backgroundColor: \"white\",\n          color: 'rgb(91, 155, 189)',\n          fontWeight: 'bolder',\n          fontSize: '20px'\n        }}\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n      ><Box>{Math.floor(100 * (props.n + props.y === 0 ? 0 : props.y / (props.n + props.y)))}</Box><Box marginLeft=\"3px\" marginRight=\"10px\">%</Box><Box marginTop=\"2px\">{positiveIcon}</Box></Box>\n    </Box>\n    <Box flex={1}></Box>\n    <Box\n      p=\"16px\"\n      style={{\n        color: 'rgb(91, 155, 189)',\n        fontWeight: 'bolder',\n      }}\n    >\n      <Box style={{ fontSize: \"2em\", textAlign: \"right\" }}>{props.name}</Box>\n      <Box style={{ fontSize: \"1em\", textAlign: \"right\" }}>{props.party}</Box>\n    </Box>\n    <Box height=\"25px\" />\n  </Box>\n);\n\ntype PeopleSwiperProps = {\n  people: Person[];\n  onSelect: (person: Person, b: boolean) => void;\n};\n\nexport const PeopleSwiper = ({ people, onSelect }: PeopleSwiperProps) => {\n  const [counter, setCounter] = React.useState(0);\n\n  const childRefs  = React.useMemo(() => Array(people.length).fill(0).map(i => React.createRef<any>()), [people.length])\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" paddingTop=\"20px\">\n      <Box display=\"flex\" flexDirection=\"row\" height=\"500px\">\n        <Box flex={3}>\n          {people &&\n            people\n              .slice(counter, counter + 2)\n              .reverse()\n              .map((person, index) => {\n\n\n                return (\n                  <Box\n                    key={person.id}\n                    position=\"absolute\"\n                    left=\"50%\"\n                    style={{\n                      WebkitUserSelect: \"none\",\n                      transform: \"translateX(-50%)\",\n                    }}\n                  >\n                    <TinderCard\n                      ref={childRefs[counter + 1 - index]}\n                      flickOnSwipe={true}\n                      key={person.id}\n                      preventSwipe={[\"up\", \"down\"]}\n                      onCardLeftScreen={(direction) => {\n                        onSelect(person, direction === \"right\")\n                        setCounter((x) => x + 1);\n                      }}\n                    >\n                      <PersonItem {...person} />\n                    </TinderCard>\n                  </Box>\n                );\n              })}\n        </Box>\n      </Box>\n      <Box paddingX=\"25px\" width=\"80vw\" maxWidth=\"300px\" alignSelf=\"center\" display=\"flex\" flexDirection=\"row\" marginTop=\"-30px\" justifyContent=\"space-between\">\n        <Box>\n          <Fab style={{background: '#5b9bbd', fontSize: 40}} onClick={() => childRefs[counter].current.swipe('left')}>{negativeIcon}</Fab>\n        </Box>\n        <Box>\n        <Fab style={{background: '#5b9bbd', fontSize: 40}} onClick={() => {window.location.href = 'https://wa.me/?text='+encodeURIComponent(window.location.href)}}><img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" width=\"35px\" height=\"35px\" /></Fab>\n        </Box>\n        <Box>\n          <Fab style={{background: '#5b9bbd', fontSize: 40}} onClick={() => childRefs[counter].current.swipe('right')}>{positiveIcon}</Fab>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\n\n/*\n\n\n<Box\n                      position=\"absolute\"\n                      style={{\n                        inset: 0,\n                        pointerEvents: 'none',\n                        fontSize: \"250px\",\n                        textAlign: \"center\",\n                        verticalAlign: \"middle\"\n                      }}\n                    >\n                      {positiveIcon}\n                    </Box>\n                    <Box\n                      position=\"absolute\"\n                      style={{\n                        inset: 0,\n                        pointerEvents: 'none',\n                        fontSize: \"250px\",\n                        textAlign: \"center\",\n                        verticalAlign: \"middle\"\n                      }}\n                    >\n                      {negativeIcon}\n                    </Box>\n\n*/","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { Person, usePeople, useVote } from \"./useApi\";\nimport { PeopleSwiper } from \"./PeopleSwiper\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport { negativeIcon, positiveIcon } from './emoji';\n\nconst Table = ({ people }: { people: Person[] }) => {\n  return (\n    <Box\n      marginTop=\"5px\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      {people.map((person) => {\n        const score =\n          person.n + person.y === 0 ? 0 : person.y / (person.n + person.y);\n        return (\n          <Box\n            key={person.id}\n            display=\"flex\"\n            flexDirection=\"row\"\n            marginTop=\"5px\"\n          >\n            <Box marginTop=\"10px\">{negativeIcon}</Box>\n            <Box width=\"4px\" />\n            <Box\n              key={person.id}\n              display=\"flex\"\n              flexDirection=\"column\"\n              marginTop=\"5px\"\n            >\n              <Box textAlign=\"center\">{person.name}</Box>\n              <Box width=\"200px\" height=\"15px\" marginTop=\"3px\">\n                <LinearProgress variant=\"determinate\" value={score * 100} />\n              </Box>\n            </Box>\n            <Box width=\"4px\" />\n            <Box marginTop=\"10px\">{positiveIcon}</Box>\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport const App = () => {\n  const { people: peopleLoaded, isError, isLoading } = usePeople();\n  // todo filter who you already voted for\n  const { voteYes, voteNo } = useVote();\n  const [voted, setVoted] = React.useState<Person[]>([]);\n\n\n  const [people, setPeople] = React.useState<Person[] | undefined>(undefined);\n\n  React.useEffect(() => {\n    const pastVotes: string[] = JSON.parse(window.localStorage.votedIds || '[]');\n    if (peopleLoaded) {\n      setPeople(peopleLoaded.filter(({id}) => !pastVotes.includes(id)));\n      setVoted(peopleLoaded.filter(({id}) => pastVotes.includes(id)));\n    }\n  }, [peopleLoaded]);\n\n  const onVote = (person: Person, yes: boolean) => {\n    (yes ? voteYes : voteNo)(person.id).then((updated: Person) => {\n      setVoted((list) =>\n        list.map((person: Person) =>\n          person.id === updated.id ? updated : person\n        )\n      );\n      window.localStorage.votedIds = JSON.stringify([person.id, ...(JSON.parse(window.localStorage.votedIds || '[]'))])\n    });\n    setVoted((x) => [\n      {\n        ...person,\n        y: person.y + (yes ? 1 : 0),\n        n: person.n + (!yes ? 1 : 0),\n      },\n      ...x,\n    ]);\n    // todo write to local host\n  };\n\n  return (\n    <Box\n      position=\"absolute\"\n      width=\"100%\"\n      minHeight=\"100%\"\n      style={{ background: \"#dbe9f0\" }}\n      borderTop=\"10px solid #5b9bbd\"\n    >\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        style={{\n          position: 'absolute',\n          backgroundSize: \"80px 100px\",\n          backgroundRepeat: \"repeat\",\n          opacity: 0.1,\n        }}\n      />\n      <Box display=\"flex\" flexDirection=\"column\">\n        {isLoading && <Box>Loading</Box>}\n        {isError && <Box>error</Box>}\n        {people && <PeopleSwiper people={people} onSelect={onVote} />}\n        <Table people={voted} />\n      </Box>\n    </Box>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}